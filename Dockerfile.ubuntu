ARG FROM_IMAGE=ubuntu:jammy
FROM $FROM_IMAGE

LABEL maintainer="Carlos Gomes <carlos.algms@gmail.com>"

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Berlin

ENTRYPOINT ["/usr/bin/tini", "--", "/init"]

RUN \
  apt update \
  && apt upgrade -y \
  && apt install -y --no-install-recommends \
    apt-transport-https \
    ca-certificates \
    curl \
    git \
    gpg-agent \
    htop \
    lsb-release \
    make \
    openssl \
    software-properties-common \
    tini \
    vim \
    xz-utils \
    zsh \
  && apt autoremove -y --purge \
	&& apt autoclean \
	&& apt clean \
	&& rm -rf /var/cache/debconf/*-old \
	&& rm -rf /usr/share/doc/* \
	&& rm -rf /var/lib/apt/lists/* \
	&& rm -rf /var/cache/apt/*

RUN \
  add-apt-repository ppa:ondrej/php \
  && add-apt-repository ppa:ondrej/apache2 \
  && apt update \
  && apt upgrade -y \
  && apt install -y --no-install-recommends \
    apache2 \
    apache2-utils \
    mcrypt \
    \
    php-pear \
    php8.1-bcmath \
    php8.1-bz2 \
    php8.1-cgi \
    php8.1-cli \
    php8.1-common \
    php8.1-curl \
    php8.1-gd \
    php8.1-imagick \
    php8.1-imap \
    php8.1-intl \
    php8.1-mbstring \
    php8.1-mcrypt \
    php8.1-mysql \
    php8.1-opcache \
    php8.1-pspell \
    php8.1-readline \
    php8.1-sqlite3 \
    php8.1-tidy \
    php8.1-xdebug \
    php8.1-xsl \
    php8.1-xml \
    php8.1-xmlrpc \
    php8.1-xsl \
    php8.1-zip \
    \
    php7.1-bcmath \
    php7.1-bz2 \
    php7.1-cgi \
    php7.1-cli \
    php7.1-common \
    php7.1-curl \
    php7.1-gd \
    php7.1-imagick \
    php7.1-imap \
    php7.1-intl \
    php7.1-json \
    php7.1-mbstring \
    php7.1-mcrypt \
    php7.1-mysql \
    php7.1-opcache \
    php7.1-pspell \
    php7.1-readline \
    php7.1-sqlite3 \
    php7.1-tidy \
    php7.1-xdebug \
    php7.1-xsl \
    php7.1-xml \
    php7.1-xmlrpc \
    php7.1-xsl \
    php7.1-zip \
  \
  && apt autoremove -y --purge \
	&& apt autoclean \
	&& apt clean \
	&& rm -rf /var/cache/debconf/*-old \
	&& rm -rf /usr/share/doc/* \
	&& rm -rf /var/lib/apt/lists/* \
	&& rm -rf /var/cache/apt/*


# https://getcomposer.org/download/
# this is the latest version supporting php7.1
ARG COMPOSER_VERSION="2.2.21"

RUN \
  curl "https://getcomposer.org/installer" --output "composer-setup.php" \
  && php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" \
  && php composer-setup.php \
    --install-dir=/usr/local/bin \
    --filename=composer \
    --version=${COMPOSER_VERSION} \
  && rm "composer-setup.php"

RUN \
  echo "**** create user and make our folders ****" \
    && mkdir -p \
      /home/abc \
    && groupadd -g 1000 abc \
    && useradd -u 1000 -g abc -d /home/abc -s /bin/zsh abc \
    && usermod -G users abc \
    && echo "**** Config Apache ****" \
    && a2enmod \
      actions \
      cgi \
      rewrite \
      ssl \
      http2 \
      headers \
      expires \
      proxy \
      proxy_balancer \
      proxy_http \
      proxy_http2 \
    && a2dissite \
      000-default.conf \
    && a2disconf \
      other-vhosts-access-log.conf \
    && sed -i 's/www-data/abc/g' /etc/apache2/envvars

# Setting php7.1 as the main one, as we only use this image with it for now
# it also breaks composer if using other version
RUN update-alternatives --set php /usr/bin/php7.1

# add local files
COPY root-fs/ /

# Linking the PHP shared ini files to multiple PHP installations
RUN \
  for p in /etc/php/*/cgi/conf.d; do \
    for i in /defaults/php-shared/*.ini; do \
        ln -sf $i $p; \
    done; \
  done;

WORKDIR /home/abc

# Rootless Docker can't bind to 80 and 443 as they are smaller than 1024
EXPOSE 8080 8443
